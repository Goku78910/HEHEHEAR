import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report, accuracy_score
from sklearn.datasets import make_classification
# Generate synthetic dataset
X, y = make_classification(
 n_samples=250,
 n_features=5,
 n_informative=3,
 n_redundant=0,
 n_classes=2,
 random_state=42
)
# Convert to DataFrame for consistency
df = pd.DataFrame(X, columns=[f'Feature{i}' for i in range(1, 6)])
df['target'] = y
# Step 1: Separate features and target
X = df.drop('target', axis=1)
y = df['target']
# Step 2: Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
# Step 3: Train-test split
X_train, X_test, y_train, y_test = train_test_split(
 X_scaled, y, test_size=0.2, random_state=42
)
# Step 4: Train Naive Bayes classifier
classifier = GaussianNB()
classifier.fit(X_train, y_train)
# Step 5: Evaluate
y_pred = classifier.predict(X_test)
print("Classification Report:")
print(classification_report(y_test, y_pred))
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")